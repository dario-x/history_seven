# Create the contingency table
observed <- as.data.frame(matrix(c(sum(type_data$number_correct_VR),
sum(type_data$number_correct_2D),
36 - sum(type_data$number_correct_VR),
36 - sum(type_data$number_correct_2D)),
nrow = 2, ncol = 2, byrow = TRUE))
rownames(observed) <- c("Correct", "False")
colnames(observed) <- c("VR", "2D")
print(type)
print(observed)
# Calculate the expected frequencies
expected <- as.data.frame(rowSums(observed) %*% t(colSums(observed)) / sum(observed))
rownames(expected) <- c("Correct", "False")
# Calculate the chi-square test statistic
chi_squared <- sum((observed - expected)^2 / expected)
# Calculate the p-value
p_value <- 1 - pchisq(chi_squared, df = 1)
# Check for statistical significance
if (p_value <= 0.1) {
significance <- "Significant"
} else {
significance <- "Not significant"
}
# Append the results to the combined table
table_combined <- bind_rows(table_combined, data.frame(Type = type,
Difference = sum(type_data$number_correct_VR) - sum(type_data$number_correct_2D),
p.value = p_value, Significance = significance))
}
# Print the combined table
cat("Combined Table of Expected and Observed Results:\n")
print(table_combined)
# FURTHER ANALYSIS
# Do people who perform better also give the visualization a bette rating?
# Scatter plot with linear regression lines
plot_combined <- ggplot(data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D)) +
geom_point(aes(color = "2D"), size = 3) +
geom_point(aes(x = ratio_correct_answers_VR, y = rating_VR, color = "VR"), size = 3) +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D),
method = "lm", se = FALSE, linetype = "dashed", color = "steelblue") +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_VR, y = rating_VR),
method = "lm", se = FALSE, linetype = "dashed", color = "orange") +
labs(title = "Relationship between given rating and performance",
x = "Ratio of Correct Answers",
y = "Rating of Visualization",
color = "Visualization") +
scale_color_manual(values = c("2D" = "steelblue", "VR" = "orange")) +
theme_minimal()
# Display the combined plot
print(plot_combined)
# Create the boxplot
bxp_ratings <- ggplot(boxplot_data_questions, aes(x = Ratings, y = Visualization, fill = Visualization)) +
geom_boxplot(width = 0.5, lwd = 1, outlier.shape = 1, outlier.stroke = 2, outlier.size = 4, notch = FALSE, outlier.colour = "black", coef = 1.5) +
scale_x_continuous(breaks = seq(0, 10, 2), limits = c(0, 10), labels = function(x) as.integer(x)) +
labs(y = "Visualization Type", x = "Ratings",
title = "Comparison of Ratings\nof the VR and 2D Application") +
theme_minimal() +
theme(axis.text = element_text(size = 12),  # Adjust the axis text size
title = element_text(size = 16), # Adjust the title size
axis.title = element_text(size = 14),  # Adjust the axis title size
legend.text = element_text(size = 12),  # Adjust the legend text size
legend.position = "top",  # Position the legend on top
legend.title = element_blank(),
legend.justification = "center")  +
geom_vline(xintercept = 5, linetype = "dashed", size = 1, color = "red")
bxp_ratings
ggsave("./plots/boxplot_ratings.pdf", bxp_ratings, width = 6, height = 4)
ggsave("./plots/boxplot_ratings.pdf", bxp_ratings, width = 6, height = 4)
# Boxplot of correctly answered question
# Create a data frame for the boxplot
boxplot_data <- data.frame(
Visualization = rep(c("VR", "2D"), each = nrow(data)),
Correct_Answers = c(data$number_correct_VR, data$number_correct_2D)
)
# Create the boxplot
bxp_questions <- ggplot(boxplot_data, aes(x = Correct_Answers, y = Visualization, fill = Visualization)) +
geom_boxplot(width = 0.5, lwd = 1, outlier.shape = 1, outlier.stroke = 2, notch = FALSE, outlier.size = 4, outlier.colour = "black", coef = 1.5) +
scale_y_continuous(breaks = seq(0, 12, 2), limits = c(0, 12)) +
labs(x = "Number of Correct Answers", y = "Visualization Type",
title = "Comparison of Correct Answers\nBetween VR and 2D Visualizations") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title = element_text(size = 20),
axis.text = element_text(size = 20),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
panel.grid.major.y = element_line(color = "lightgrey"),
panel.border = element_blank(),
panel.grid.minor = element_blank()) +
geom_hline(yintercept = 6, linetype = "dashed", size =1,  color = "red")
# Print the boxplot
print(bxp_questions)
# Boxplot of correctly answered question
# Create a data frame for the boxplot
boxplot_data <- data.frame(
Visualization = rep(c("VR", "2D"), each = nrow(data)),
Correct_Answers = c(data$number_correct_VR, data$number_correct_2D)
)
# Create the boxplot
bxp_questions <- ggplot(boxplot_data, aes(x = Correct_Answers, y = Visualization, fill = Visualization)) +
geom_boxplot(width = 0.5, lwd = 1, outlier.shape = 1, outlier.stroke = 2, notch = FALSE, outlier.size = 4, outlier.colour = "black", coef = 1.5) +
scale_y_continuous(breaks = seq(0, 12, 2), limits = c(0, 12)) +
labs(x = "Number of Correct Answers", y = "Visualization Type",
title = "Comparison of Correct Answers\nBetween VR and 2D Visualizations") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title = element_text(size = 20),
axis.text = element_text(size = 20),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
panel.grid.major.y = element_line(color = "lightgrey"),
panel.border = element_blank(),
panel.grid.minor = element_blank()) +
geom_hline(yintercept = 6, linetype = "dashed", size =1,  color = "red")
# Print the boxplot
print(bxp_questions)
# Create the boxplot
bxp_questions <- ggplot(boxplot_data, aes(x = Correct_Answers, y = Visualization, fill = Visualization)) +
geom_boxplot(width = 0.5, lwd = 1, outlier.shape = 1, outlier.stroke = 2, notch = FALSE, outlier.size = 4, outlier.colour = "black", coef = 1.5) +
scale_x_continuous(breaks = seq(0, 12, 2), limits = c(0, 12)) +
labs(x = "Number of Correct Answers", y = "Visualization Type",
title = "Comparison of Correct Answers\nBetween VR and 2D Visualizations") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title = element_text(size = 20),
axis.text = element_text(size = 20),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
panel.grid.major.y = element_line(color = "lightgrey"),
panel.border = element_blank(),
panel.grid.minor = element_blank()) +
geom_hline(yintercept = 6, linetype = "dashed", size =1,  color = "red")
# Print the boxplot
print(bxp_questions)
# Create the boxplot
bxp_questions <- ggplot(boxplot_data, aes(x = Correct_Answers, y = Visualization, fill = Visualization)) +
geom_boxplot(width = 0.5, lwd = 1, outlier.shape = 1, outlier.stroke = 2, notch = FALSE, outlier.size = 4, outlier.colour = "black", coef = 1.5) +
scale_x_continuous(breaks = seq(0, 12, 2), limits = c(0, 12)) +
labs(x = "Number of Correct Answers per Question", y = "Visualization Type",
title = "Comparison of Correct Answers\nBetween VR and 2D Visualizations") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title = element_text(size = 20),
axis.text = element_text(size = 20),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
panel.grid.major.y = element_line(color = "lightgrey"),
panel.border = element_blank(),
panel.grid.minor = element_blank()) +
geom_hline(yintercept = 6, linetype = "dashed", size =1,  color = "red")
# Print the boxplot
print(bxp_questions)
ggsave("./plots/correct_and_wrong_answers_boxplot.pdf", t_test_1.2, width = 6, height = 4)
# Create the boxplot
bxp_questions <- ggplot(boxplot_data, aes(x = Correct_Answers, y = Visualization, fill = Visualization)) +
geom_boxplot(width = 0.5, lwd = 1, outlier.shape = 1, outlier.stroke = 2, notch = FALSE, outlier.size = 4, outlier.colour = "black", coef = 1.5) +
scale_x_continuous(breaks = seq(0, 12, 2), limits = c(0, 12)) +
labs(x = "Correct Answers per Question", y = "Visualization Type",
title = "Comparison of Correct Answers\nBetween VR and 2D Visualizations") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title = element_text(size = 20),
axis.text = element_text(size = 20),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
panel.grid.major.y = element_line(color = "lightgrey"),
panel.border = element_blank(),
panel.grid.minor = element_blank()) +
geom_hline(yintercept = 6, linetype = "dashed", size =1,  color = "red")
# Print the boxplot
print(bxp_questions)
ggsave("./plots/correct_and_wrong_answers_boxplot.pdf", t_test_1.2, width = 6, height = 4)
# Create the boxplot
bxp_questions <- ggplot(boxplot_data, aes(x = Correct_Answers, y = Visualization, fill = Visualization)) +
geom_boxplot(width = 0.5, lwd = 1, outlier.shape = 1, outlier.stroke = 2, notch = FALSE, outlier.size = 4, outlier.colour = "black", coef = 1.5) +
scale_x_continuous(breaks = seq(0, 12, 2), limits = c(0, 12)) +
labs(x = "Correct Answers per Question", y = "Visualization Type",
title = "Comparison of Correct Answers\nBetween VR and 2D Visualizations") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title = element_text(size = 20),
axis.text = element_text(size = 20),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
panel.grid.major.y = element_line(color = "lightgrey"),
panel.border = element_blank(),
panel.grid.minor = element_blank()) +
geom_hline(yintercept = 6, linetype = "dashed", size =1,  color = "red")
# Print the boxplot
print(bxp_questions)
ggsave("./plots/correct_and_wrong_answers_boxplot.pdf", t_test_1.2, width = 6, height = 4)
# Load the required libraries
library(readr)
library(ggplot2)
library(xtable)
library(gginference)
library(dplyr)
library(tidyr)
library(viridis)
library(RColorBrewer)
# Read data from CSV file
data <- read.csv("./data/questionaire_results_general.csv", sep = ";")
# Read data from CSV file
data_per_participants <- read.csv("./data/questionaire_results_per_participant.csv", sep = ";")
# Scatter plot with linear regression lines
plot_combined <- ggplot(data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D)) +
geom_point(aes(color = "2D"), size = 3) +
geom_point(aes(x = ratio_correct_answers_VR, y = rating_VR, color = "VR"), size = 3) +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D),
method = "lm", se = FALSE, linetype = "dashed", color = "steelblue") +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_VR, y = rating_VR),
method = "lm", se = FALSE, linetype = "dashed", color = "orange") +
labs(title = "Relationship between given rating and performance",
x = "Ratio of Correct Answers",
y = "Rating of Visualization",
color = "Visualization") +
scale_color_manual(values = c("2D" = "steelblue", "VR" = "orange")) +
theme_minimal()
# Display the combined plot
print(plot_combined)
# Scatter plot with linear regression lines
plot_combined <- ggplot(data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D)) +
geom_point(aes(color = "2D"), size = 3) +
geom_point(aes(x = ratio_correct_answers_VR, y = rating_VR, color = "VR"), size = 3) +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D),
method = "lm", se = FALSE, linetype = "dashed", color = "steelblue") +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_VR, y = rating_VR),
method = "lm", se = FALSE, linetype = "dashed", color = "orange") +
labs(title = "Relationship between given rating and performance",
x = "Ratio of Correct Answers",
y = "Rating of Visualization",
color = "Visualization") +
scale_color_manual(values = c("2D" = "steelblue", "VR" = "orange")) +
theme_minimal() +
theme(axis.text = element_text(size = 12),  # Adjust the axis text size
title = element_text(size = 16), # Adjust the title size
axis.title = element_text(size = 14),  # Adjust the axis title size
legend.text = element_text(size = 12),  # Adjust the legend text size
legend.position = "top",  # Position the legend on top
legend.title = element_blank(),
legend.justification = "center")  +
geom_vline(xintercept = 5, linetype = "dashed", size = 1, color = "red")
ggsave("./plots/scatter_performance_rating.pdf", plot_combined, width = 6, height = 4)
# Scatter plot with linear regression lines
plot_combined <- ggplot(data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D)) +
geom_point(aes(color = "2D"), size = 3) +
geom_point(aes(x = ratio_correct_answers_VR, y = rating_VR, color = "VR"), size = 3) +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D),
method = "lm", se = FALSE, linetype = "dashed", color = "steelblue") +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_VR, y = rating_VR),
method = "lm", se = FALSE, linetype = "dashed", color = "orange") +
labs(title = "Relationship between given rating and performance",
x = "Ratio of Correct Answers",
y = "Rating of Visualization",
color = "Visualization") +
scale_color_manual(values = c("2D" = "steelblue", "VR" = "orange")) +
theme_minimal() +
theme(axis.text = element_text(size = 12),  # Adjust the axis text size
title = element_text(size = 16), # Adjust the title size
axis.title = element_text(size = 14),  # Adjust the axis title size
legend.text = element_text(size = 12),  # Adjust the legend text size
legend.position = "top",  # Position the legend on top
legend.title = element_blank(),
legend.justification = "center")
ggsave("./plots/scatter_performance_rating.pdf", plot_combined, width = 6, height = 4)
# Scatter plot with linear regression lines
plot_combined <- ggplot(data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D)) +
geom_point(aes(color = "2D"), size = 3) +
geom_point(aes(x = ratio_correct_answers_VR, y = rating_VR, color = "VR"), size = 3) +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D),
method = "lm", se = FALSE, linetype = "dashed", color = "steelblue") +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_VR, y = rating_VR),
method = "lm", se = FALSE, linetype = "dashed", color = "orange") +
labs(title = "Relationship - rating and performance",
x = "Ratio of Correct Answers",
y = "Rating of Visualization",
color = "Visualization") +
scale_color_manual(values = c("2D" = "steelblue", "VR" = "orange")) +
theme_minimal() +
theme(axis.text = element_text(size = 12),  # Adjust the axis text size
title = element_text(size = 16), # Adjust the title size
axis.title = element_text(size = 14),  # Adjust the axis title size
legend.text = element_text(size = 12),  # Adjust the legend text size
legend.position = "top",  # Position the legend on top
legend.title = element_blank(),
legend.justification = "center")
ggsave("./plots/scatter_performance_rating.pdf", plot_combined, width = 6, height = 4)
# Scatter plot with linear regression lines
plot_combined <- ggplot(data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D)) +
geom_jitter(aes(color = "2D"), size = 3) +
geom_jitter(aes(x = ratio_correct_answers_VR, y = rating_VR, color = "VR"), size = 3) +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D),
method = "lm", se = FALSE, linetype = "dashed", color = "steelblue") +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_VR, y = rating_VR),
method = "lm", se = FALSE, linetype = "dashed", color = "orange") +
labs(title = "Relationship - rating and performance",
x = "Ratio of Correct Answers",
y = "Rating of Visualization",
color = "Visualization") +
scale_color_manual(values = c("2D" = "steelblue", "VR" = "orange")) +
theme_minimal() +
theme(axis.text = element_text(size = 12),  # Adjust the axis text size
title = element_text(size = 16), # Adjust the title size
axis.title = element_text(size = 14),  # Adjust the axis title size
legend.text = element_text(size = 12),  # Adjust the legend text size
legend.position = "top",  # Position the legend on top
legend.title = element_blank(),
legend.justification = "center")
ggsave("./plots/scatter_performance_rating.pdf", plot_combined, width = 6, height = 4)
ggsave("./plots/scatter_performance_rating.pdf", plot_combined, width = 6, height = 6)
# Scatter plot with linear regression lines
plot_combined <- ggplot(data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D)) +
geom_jitter(aes(color = "2D"), size = 3) +
geom_jitter(aes(x = ratio_correct_answers_VR, y = rating_VR, color = "VR"), size = 3) +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D),
method = "lm", se = FALSE, linetype = "dashed", color = "steelblue") +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_VR, y = rating_VR),
method = "lm", se = FALSE, linetype = "dashed", color = "orange") +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_VR+ratio_correct_answers_2D,
y = rating_VR+rating_2D),
method = "lm", se = FALSE, linetype = "dashed", color = "grey") +
labs(title = "Relationship - rating and performance",
x = "Ratio of Correct Answers",
y = "Rating of Visualization",
color = "Visualization") +
scale_color_manual(values = c("2D" = "steelblue", "VR" = "orange")) +
theme_minimal() +
theme(axis.text = element_text(size = 12),  # Adjust the axis text size
title = element_text(size = 16), # Adjust the title size
axis.title = element_text(size = 14),  # Adjust the axis title size
legend.text = element_text(size = 12),  # Adjust the legend text size
legend.position = "top",  # Position the legend on top
legend.title = element_blank(),
legend.justification = "center")
ggsave("./plots/scatter_performance_rating.pdf", plot_combined, width = 6, height = 6)
# Scatter plot with linear regression lines
plot_combined <- ggplot(data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D)) +
geom_jitter(aes(color = "2D"), size = 3) +
geom_jitter(aes(x = ratio_correct_answers_VR, y = rating_VR, color = "VR"), size = 3) +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D),
method = "lm", se = FALSE, linetype = "dashed", color = "steelblue") +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_VR, y = rating_VR),
method = "lm", se = FALSE, linetype = "dashed", color = "orange") +
geom_smooth(data = data_per_participants, aes(x = (ratio_correct_answers_VR+ratio_correct_answers_2D)/2,
y = (rating_VR+rating_2D)/2),
method = "lm", se = FALSE, linetype = "dashed", color = "grey") +
labs(title = "Relationship - rating and performance",
x = "Ratio of Correct Answers",
y = "Rating of Visualization",
color = "Visualization") +
scale_color_manual(values = c("2D" = "steelblue", "VR" = "orange")) +
theme_minimal() +
theme(axis.text = element_text(size = 12),  # Adjust the axis text size
title = element_text(size = 16), # Adjust the title size
axis.title = element_text(size = 14),  # Adjust the axis title size
legend.text = element_text(size = 12),  # Adjust the legend text size
legend.position = "top",  # Position the legend on top
legend.title = element_blank(),
legend.justification = "center")
ggsave("./plots/scatter_performance_rating.pdf", plot_combined, width = 6, height = 6)
# Do people who perform better also give the visualization a bette rating?
# Scatter plot with linear regression lines
plot_combined <- ggplot(data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D)) +
geom_jitter(aes(color = "2D"), size = 3) +
geom_jitter(aes(x = ratio_correct_answers_VR, y = rating_VR, color = "VR"), size = 3) +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D),
method = "lm", se = FALSE, linetype = "dashed", color = "steelblue") +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_VR, y = rating_VR),
method = "lm", se = FALSE, linetype = "dashed", color = "orange") +
geom_smooth(data = data_per_participants, aes(x = (ratio_correct_answers_VR+ratio_correct_answers_2D)/2,
y = (rating_VR+rating_2D)/2),
method = "lm", se = FALSE, linetype = "dashed", color = "grey") +
labs(title = "Relationship - rating and performance",
x = "Ratio of Correct Answers",
y = "Rating of Visualization",
color = "Visualization") +
scale_color_manual(values = c("2D" = "#f8766d", "VR" = "#00bfc4")) +
theme_minimal() +
theme(axis.text = element_text(size = 12),  # Adjust the axis text size
title = element_text(size = 16), # Adjust the title size
axis.title = element_text(size = 14),  # Adjust the axis title size
legend.text = element_text(size = 12),  # Adjust the legend text size
legend.position = "top",  # Position the legend on top
legend.title = element_blank(),
legend.justification = "center")
ggsave("./plots/scatter_performance_rating.pdf", plot_combined, width = 6, height = 6)
# Plot of differences
# Calculate the difference between VR and 2D correct answers
data$diff_correct = data$number_correct_VR - data$number_correct_2D
# Determine the color based on which has more correct answers
data$color <- ifelse(data$number_correct_VR > data$number_correct_2D, "VR", "2D")
# Create the plot
plot_diff <- ggplot(data, aes(x = question_id, y = diff_correct, fill = color)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("VR" = "#f8766d", "VR" = "#00bfc4")) +
labs(x = "Question ID", y = "Diff. in Correct Answers (VR - 2D)",
title = "Comparison of Correct Answers between VR and 2D") +
theme_minimal() +
theme_minimal() +
theme(axis.text = element_text(size = 12),  # Adjust the axis text size
title = element_text(size = 16), # Adjust the title size
axis.title = element_text(size = 14),  # Adjust the axis title size
legend.text = element_text(size = 14),  # Adjust the legend text size
legend.position = "top",  # Position the legend on top
legend.title = element_blank(),
legend.justification = "center") +
scale_y_continuous(limits = c(-12, 12), breaks = c(-12, -5, -3, 0, 2, 5, 12))
# Adjust legend title and labels
plot_diff <- plot_diff +
guides(fill = guide_legend(title = "Comparison - which group of participants performed better",
labels = c("2D", "VR")))
# Print the plot
print(plot_diff)
ggsave("./plots/difference_correct_answers.pdf", plot_diff, width = 12, height = 4)
# Plot of differences
# Calculate the difference between VR and 2D correct answers
data$diff_correct = data$number_correct_VR - data$number_correct_2D
# Determine the color based on which has more correct answers
data$color <- ifelse(data$number_correct_VR > data$number_correct_2D, "VR", "2D")
# Create the plot
plot_diff <- ggplot(data, aes(x = question_id, y = diff_correct, fill = color)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("VR" = "#f8766d", "2D" = "#00bfc4")) +
labs(x = "Question ID", y = "Diff. in Correct Answers (VR - 2D)",
title = "Comparison of Correct Answers between VR and 2D") +
theme_minimal() +
theme_minimal() +
theme(axis.text = element_text(size = 12),  # Adjust the axis text size
title = element_text(size = 16), # Adjust the title size
axis.title = element_text(size = 14),  # Adjust the axis title size
legend.text = element_text(size = 14),  # Adjust the legend text size
legend.position = "top",  # Position the legend on top
legend.title = element_blank(),
legend.justification = "center") +
scale_y_continuous(limits = c(-12, 12), breaks = c(-12, -5, -3, 0, 2, 5, 12))
# Adjust legend title and labels
plot_diff <- plot_diff +
guides(fill = guide_legend(title = "Comparison - which group of participants performed better",
labels = c("2D", "VR")))
# Print the plot
print(plot_diff)
ggsave("./plots/difference_correct_answers.pdf", plot_diff, width = 12, height = 4)
# Plot of differences
# Calculate the difference between VR and 2D correct answers
data$diff_correct = data$number_correct_VR - data$number_correct_2D
# Determine the color based on which has more correct answers
data$color <- ifelse(data$number_correct_VR > data$number_correct_2D, "VR", "2D")
# Create the plot
plot_diff <- ggplot(data, aes(x = question_id, y = diff_correct, fill = color)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("2D" = "#f8766d", "VR" = "#00bfc4")) +
labs(x = "Question ID", y = "Diff. in Correct Answers (VR - 2D)",
title = "Comparison of Correct Answers between VR and 2D") +
theme_minimal() +
theme_minimal() +
theme(axis.text = element_text(size = 12),  # Adjust the axis text size
title = element_text(size = 16), # Adjust the title size
axis.title = element_text(size = 14),  # Adjust the axis title size
legend.text = element_text(size = 14),  # Adjust the legend text size
legend.position = "top",  # Position the legend on top
legend.title = element_blank(),
legend.justification = "center") +
scale_y_continuous(limits = c(-12, 12), breaks = c(-12, -5, -3, 0, 2, 5, 12))
# Adjust legend title and labels
plot_diff <- plot_diff +
guides(fill = guide_legend(title = "Comparison - which group of participants performed better",
labels = c("2D", "VR")))
# Print the plot
print(plot_diff)
ggsave("./plots/difference_correct_answers.pdf", plot_diff, width = 12, height = 4)
# Boxplot of correctly answered question
# Create a data frame for the boxplot
boxplot_data <- data.frame(
Visualization = rep(c("VR", "2D"), each = nrow(data)),
Correct_Answers = c(data$number_correct_VR, data$number_correct_2D)
)
# Create the boxplot
bxp_questions <- ggplot(boxplot_data, aes(x = Correct_Answers, y = Visualization, fill = Visualization)) +
geom_boxplot(width = 0.5, lwd = 1, outlier.shape = 1, outlier.stroke = 2, notch = FALSE, outlier.size = 4, outlier.colour = "black", coef = 1.5) +
scale_x_continuous(breaks = seq(0, 12, 1), limits = c(0, 12)) +
labs(x = "Correct Answers per Question", y = "Visualization Type",
title = "Comparison of Correct Answers\nBetween VR and 2D Visualizations") +
theme_minimal() +
theme(axis.text = element_text(size = 14),  # Adjust the axis text size
title = element_text(size = 16), # Adjust the title size
axis.title = element_text(size = 14),  # Adjust the axis title size
legend.text = element_text(size = 14),  # Adjust the legend text size
legend.position = "top",  # Position the legend on top
legend.title = element_blank(),
legend.justification = "center")
# Print the boxplot
print(bxp_questions)
ggsave("./plots/correct_and_wrong_answers_boxplot.pdf", bxp_questions, width = 6, height = 4)
# Significance test for all questions
# Scatter plot with linear regression lines
plot_combined <- ggplot(data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D)) +
geom_jitter(aes(color = "2D"), size = 3) +
geom_jitter(aes(x = ratio_correct_answers_VR, y = rating_VR, color = "VR"), size = 3) +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_2D, y = rating_2D),
method = "lm", se = FALSE, linetype = "dashed", color = "#f8766d") +
geom_smooth(data = data_per_participants, aes(x = ratio_correct_answers_VR, y = rating_VR),
method = "lm", se = FALSE, linetype = "dashed", color = "#00bfc4") +
geom_smooth(data = data_per_participants, aes(x = (ratio_correct_answers_VR+ratio_correct_answers_2D)/2,
y = (rating_VR+rating_2D)/2),
method = "lm", se = FALSE, linetype = "dashed", color = "grey") +
labs(title = "Relationship - rating and performance",
x = "Ratio of Correct Answers",
y = "Rating of Visualization",
color = "Visualization") +
scale_color_manual(values = c("2D" = "#f8766d", "VR" = "#00bfc4")) +
theme_minimal() +
theme(axis.text = element_text(size = 12),  # Adjust the axis text size
title = element_text(size = 16), # Adjust the title size
axis.title = element_text(size = 14),  # Adjust the axis title size
legend.text = element_text(size = 12),  # Adjust the legend text size
legend.position = "top",  # Position the legend on top
legend.title = element_blank(),
legend.justification = "center")
ggsave("./plots/scatter_performance_rating.pdf", plot_combined, width = 6, height = 6)
